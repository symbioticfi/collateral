{"abi":[{"type":"function","name":"NETWORK_REGISTRY","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"middleware","inputs":[{"name":"network","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"setMiddleware","inputs":[{"name":"middleware","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"SetMiddleware","inputs":[{"name":"network","type":"address","indexed":true,"internalType":"address"},{"name":"middleware","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"AlreadySet","inputs":[]},{"type":"error","name":"NotNetwork","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"NETWORK_REGISTRY()":"c0cd7c3e","middleware(address)":"bb5ed032","setMiddleware(address)":"b7d8e1a9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNetwork\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"network\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"middleware\",\"type\":\"address\"}],\"name\":\"SetMiddleware\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NETWORK_REGISTRY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"network\",\"type\":\"address\"}],\"name\":\"middleware\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"middleware\",\"type\":\"address\"}],\"name\":\"setMiddleware\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SetMiddleware(address,address)\":{\"params\":{\"middleware\":\"new middleware of the network\",\"network\":\"address of the network\"}}},\"kind\":\"dev\",\"methods\":{\"NETWORK_REGISTRY()\":{\"returns\":{\"_0\":\"address of the network registry\"}},\"middleware(address)\":{\"params\":{\"network\":\"address of the network\"},\"returns\":{\"_0\":\"middleware of the network\"}},\"setMiddleware(address)\":{\"params\":{\"middleware\":\"new middleware of the network\"}}},\"version\":1},\"userdoc\":{\"events\":{\"SetMiddleware(address,address)\":{\"notice\":\"Emitted when a middleware is set for a network.\"}},\"kind\":\"user\",\"methods\":{\"NETWORK_REGISTRY()\":{\"notice\":\"Get the network registry's address.\"},\"middleware(address)\":{\"notice\":\"Get a given network's middleware.\"},\"setMiddleware(address)\":{\"notice\":\"Set a new middleware for a calling network.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/core/src/interfaces/service/INetworkMiddlewareService.sol\":\"INetworkMiddlewareService\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@symbioticfi/core/=lib/core/\",\":core/=lib/core/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/permit2/lib/solmate/\"],\"viaIR\":true},\"sources\":{\"lib/core/src/interfaces/service/INetworkMiddlewareService.sol\":{\"keccak256\":\"0x347afc7fcf1fbcdb96d66162070ef6c78aed27b3af2c1d5dfb4e511840631783\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d90b8ceb495159e8e4e95d76447719dd166443f67dfabdd942846162071595c\",\"dweb:/ipfs/QmVVuiAWYx92T6vBvNMKZfTvraCf1fa16BsUKkdNs3hdHA\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AlreadySet"},{"inputs":[],"type":"error","name":"NotNetwork"},{"inputs":[{"internalType":"address","name":"network","type":"address","indexed":true},{"internalType":"address","name":"middleware","type":"address","indexed":false}],"type":"event","name":"SetMiddleware","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"NETWORK_REGISTRY","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"network","type":"address"}],"stateMutability":"view","type":"function","name":"middleware","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"middleware","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setMiddleware"}],"devdoc":{"kind":"dev","methods":{"NETWORK_REGISTRY()":{"returns":{"_0":"address of the network registry"}},"middleware(address)":{"params":{"network":"address of the network"},"returns":{"_0":"middleware of the network"}},"setMiddleware(address)":{"params":{"middleware":"new middleware of the network"}}},"version":1},"userdoc":{"kind":"user","methods":{"NETWORK_REGISTRY()":{"notice":"Get the network registry's address."},"middleware(address)":{"notice":"Get a given network's middleware."},"setMiddleware(address)":{"notice":"Set a new middleware for a calling network."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@symbioticfi/core/=lib/core/","core/=lib/core/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/permit2/","solmate/=lib/permit2/lib/solmate/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/core/src/interfaces/service/INetworkMiddlewareService.sol":"INetworkMiddlewareService"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/core/src/interfaces/service/INetworkMiddlewareService.sol":{"keccak256":"0x347afc7fcf1fbcdb96d66162070ef6c78aed27b3af2c1d5dfb4e511840631783","urls":["bzz-raw://2d90b8ceb495159e8e4e95d76447719dd166443f67dfabdd942846162071595c","dweb:/ipfs/QmVVuiAWYx92T6vBvNMKZfTvraCf1fa16BsUKkdNs3hdHA"],"license":"MIT"}},"version":1},"id":20}